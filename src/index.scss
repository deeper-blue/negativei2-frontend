/* Base styles */
body {
  margin: 0;
  padding: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-image: url('/assets/backgrounds/ps.png');
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
}

:root {
  font-size: 17px;
}

/* Mixins */
@mixin media-width($breakpoint-value) {
  @media only screen and (max-width: $breakpoint-value) {
    @content;
  }
}

@mixin placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin transform($transformations...) {
  -ms-transform: $transformations;
  -webkit-transform: $transformations;
  -moz-transform: $transformations;
  transform: $transformations;
}

@mixin transition($transitions...) {
  -ms-transition: $transitions;
  -moz-transition: $transitions;
  -webkit-transition: $transitions;
  transition: $transitions;
}

@mixin box-shadow($box-shadows...) {
  -webkit-box-shadow: $box-shadows;
  -moz-box-shadow: $box-shadows;
  box-shadow: $box-shadows;
}

@mixin filter($filter...) {
  -webkit-filter: $filter;
  -moz-filter: $filter;
  -o-filter: $filter;
  -ms-filter: $filter;
  filter: $filter;
}

@mixin user-select($value) {
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
  user-select: $value;
}

@mixin appearance($value) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  appearance: $value;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

/* Uniform styling */
// Variables
$breakpoint: 500px;
$header: 45px;

// Colors
$colors: (
  react-blue: #61dafb,
  middle-blue: rgb(28, 140, 184),
  middle-dark-blue: rgb(40, 86, 129),
  middle-darker-blue: rgb(26, 55, 82),
  dark-blue: #232838,
  darker-blue: #1f2331,
  pale-blue: rgb(66, 81, 114),
  paler-blue: rgb(113, 126, 150),
  dark-pale-blue: rgb(45, 54, 71),
  pale-red: rgb(207, 147, 147),
  middle-yellow: rgb(206, 159, 71),
  middle-orange: #f16000,
  light-yellow: #f3d19f
);

// Fonts
@import url('https://fonts.googleapis.com/css?family=Roboto+Mono:500');

// Styles
//> Buttons
.base-button {
  @include appearance(none);
  margin: 0 auto;
  box-sizing: border-box;
  padding: 10px 15px;
  border-radius: 5px;
  outline: 0;
  font-size: 1rem;
  cursor: pointer;
  border: 3px solid map-get($colors, paler-blue);
  background-color: map-get($colors, dark-pale-blue);
  color: white;
  text-decoration: none;
  text-align: center;
  @include transition(all 0.25s);
  &:hover {
    background-color: map-get($colors, paler-blue);
    color: map-get($colors, darker-blue);
  }
  &:active {
    color: map-get($colors, pale-blue);
    @include transform(scale(0.95));
  }
}
.button {
  @extend .base-button;
  &.large {
    border-radius: 7px;
    padding: 20px 25px;
  }
  &.small {
    border-width: 2px;
    border-radius: 2px;
    padding: 4px 9px;
  }
  &.large-font { font-size: 1.3rem; }
  &.small-font { font-size: 0.7rem; }
}
//> Links
.base-link {
  text-decoration: none;
  @include transition(all 0.25s);
}
.link-blue {
  @extend .base-link;
  color: map-get($colors, react-blue);
  &:hover { color: map-get($colors, middle-blue); }
  &.shadow:active { text-shadow: 1px 1px map-get($colors, middle-blue); }
}
.link-dark-blue {
  @extend .base-link;
  color: map-get($colors, middle-dark-blue);
  &:hover { color: map-get($colors, react-blue); }
  &.shadow:active { text-shadow: 1px 1px map-get($colors, middle-blue); }
}
.link-yellow {
  @extend .base-link;
  color: map-get($colors, middle-yellow);
  &:hover { color: map-get($colors, light-yellow); }
  &.shadow:active { text-shadow: 1px 1px map-get($colors, middle-orange); }
}